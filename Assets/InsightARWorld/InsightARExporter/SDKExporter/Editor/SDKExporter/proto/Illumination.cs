// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: illumination.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoWorld {

  /// <summary>Holder for reflection information generated from illumination.proto</summary>
  public static partial class IlluminationReflection {

    #region Descriptor
    /// <summary>File descriptor for illumination.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static IlluminationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJpbGx1bWluYXRpb24ucHJvdG8SC3Byb3RvX3dvcmxkGgxlbnRpdHkucHJv",
            "dG8aDXRleHR1cmUucHJvdG8i3gEKEklsbHVtaW5hdGlvbkJ1bmRsZRIPCgd2",
            "ZXJzaW9uGAEgASgJEgwKBG5hbWUYZSABKAkSJwoIdGV4dHVyZXMYyQEgAygL",
            "MhQucHJvdG9fd29ybGQuVGV4dHVyZRIjCgZsaWdodHMYrQIgAygLMhIucHJv",
            "dG9fd29ybGQuTGlnaHQSOAoRcmVmbGVjdGlvbl9wcm9iZXMYkQMgAygLMhwu",
            "cHJvdG9fd29ybGQuUmVmbGVjdGlvblByb2JlEiEKGHNwaGVyZV9oYXJtb25p",
            "Y19saWdodGluZxj1AyADKAJCAkgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoWorld.EntityReflection.Descriptor, global::ProtoWorld.TextureReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoWorld.IlluminationBundle), global::ProtoWorld.IlluminationBundle.Parser, new[]{ "Version", "Name", "Textures", "Lights", "ReflectionProbes", "SphereHarmonicLighting" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class IlluminationBundle : pb::IMessage<IlluminationBundle> {
    private static readonly pb::MessageParser<IlluminationBundle> _parser = new pb::MessageParser<IlluminationBundle>(() => new IlluminationBundle());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IlluminationBundle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoWorld.IlluminationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlluminationBundle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlluminationBundle(IlluminationBundle other) : this() {
      version_ = other.version_;
      name_ = other.name_;
      textures_ = other.textures_.Clone();
      lights_ = other.lights_.Clone();
      reflectionProbes_ = other.reflectionProbes_.Clone();
      sphereHarmonicLighting_ = other.sphereHarmonicLighting_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IlluminationBundle Clone() {
      return new IlluminationBundle(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 101;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "textures" field.</summary>
    public const int TexturesFieldNumber = 201;
    private static readonly pb::FieldCodec<global::ProtoWorld.Texture> _repeated_textures_codec
        = pb::FieldCodec.ForMessage(1610, global::ProtoWorld.Texture.Parser);
    private readonly pbc::RepeatedField<global::ProtoWorld.Texture> textures_ = new pbc::RepeatedField<global::ProtoWorld.Texture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoWorld.Texture> Textures {
      get { return textures_; }
    }

    /// <summary>Field number for the "lights" field.</summary>
    public const int LightsFieldNumber = 301;
    private static readonly pb::FieldCodec<global::ProtoWorld.Light> _repeated_lights_codec
        = pb::FieldCodec.ForMessage(2410, global::ProtoWorld.Light.Parser);
    private readonly pbc::RepeatedField<global::ProtoWorld.Light> lights_ = new pbc::RepeatedField<global::ProtoWorld.Light>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoWorld.Light> Lights {
      get { return lights_; }
    }

    /// <summary>Field number for the "reflection_probes" field.</summary>
    public const int ReflectionProbesFieldNumber = 401;
    private static readonly pb::FieldCodec<global::ProtoWorld.ReflectionProbe> _repeated_reflectionProbes_codec
        = pb::FieldCodec.ForMessage(3210, global::ProtoWorld.ReflectionProbe.Parser);
    private readonly pbc::RepeatedField<global::ProtoWorld.ReflectionProbe> reflectionProbes_ = new pbc::RepeatedField<global::ProtoWorld.ReflectionProbe>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ProtoWorld.ReflectionProbe> ReflectionProbes {
      get { return reflectionProbes_; }
    }

    /// <summary>Field number for the "sphere_harmonic_lighting" field.</summary>
    public const int SphereHarmonicLightingFieldNumber = 501;
    private static readonly pb::FieldCodec<float> _repeated_sphereHarmonicLighting_codec
        = pb::FieldCodec.ForFloat(4010);
    private readonly pbc::RepeatedField<float> sphereHarmonicLighting_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> SphereHarmonicLighting {
      get { return sphereHarmonicLighting_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IlluminationBundle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IlluminationBundle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Name != other.Name) return false;
      if(!textures_.Equals(other.textures_)) return false;
      if(!lights_.Equals(other.lights_)) return false;
      if(!reflectionProbes_.Equals(other.reflectionProbes_)) return false;
      if(!sphereHarmonicLighting_.Equals(other.sphereHarmonicLighting_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= textures_.GetHashCode();
      hash ^= lights_.GetHashCode();
      hash ^= reflectionProbes_.GetHashCode();
      hash ^= sphereHarmonicLighting_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Name);
      }
      textures_.WriteTo(output, _repeated_textures_codec);
      lights_.WriteTo(output, _repeated_lights_codec);
      reflectionProbes_.WriteTo(output, _repeated_reflectionProbes_codec);
      sphereHarmonicLighting_.WriteTo(output, _repeated_sphereHarmonicLighting_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += textures_.CalculateSize(_repeated_textures_codec);
      size += lights_.CalculateSize(_repeated_lights_codec);
      size += reflectionProbes_.CalculateSize(_repeated_reflectionProbes_codec);
      size += sphereHarmonicLighting_.CalculateSize(_repeated_sphereHarmonicLighting_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IlluminationBundle other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      textures_.Add(other.textures_);
      lights_.Add(other.lights_);
      reflectionProbes_.Add(other.reflectionProbes_);
      sphereHarmonicLighting_.Add(other.sphereHarmonicLighting_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 810: {
            Name = input.ReadString();
            break;
          }
          case 1610: {
            textures_.AddEntriesFrom(input, _repeated_textures_codec);
            break;
          }
          case 2410: {
            lights_.AddEntriesFrom(input, _repeated_lights_codec);
            break;
          }
          case 3210: {
            reflectionProbes_.AddEntriesFrom(input, _repeated_reflectionProbes_codec);
            break;
          }
          case 4010:
          case 4013: {
            sphereHarmonicLighting_.AddEntriesFrom(input, _repeated_sphereHarmonicLighting_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
