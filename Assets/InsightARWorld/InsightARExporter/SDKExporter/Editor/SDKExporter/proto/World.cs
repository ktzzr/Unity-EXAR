// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: world.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoWorld {

  /// <summary>Holder for reflection information generated from world.proto</summary>
  public static partial class WorldReflection {

    #region Descriptor
    /// <summary>File descriptor for world.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WorldReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgt3b3JsZC5wcm90bxILcHJvdG9fd29ybGQaDXRleHR1cmUucHJvdG8aC3Nj",
            "ZW5lLnByb3RvGgttb2RlbC5wcm90bxoObWF0ZXJpYWwucHJvdG8aDHNoYWRl",
            "ci5wcm90byKPBQoFV29ybGQSDwoHdmVyc2lvbhgBIAEoCRIMCgRuYW1lGGUg",
            "ASgJEgwKBGZpbGUYZiABKAkSMQoHc2hhZGVycxjJASADKAsyHy5wcm90b193",
            "b3JsZC5Xb3JsZC5TaGFkZXJzRW50cnkSMwoIdGV4dHVyZXMYygEgAygLMiAu",
            "cHJvdG9fd29ybGQuV29ybGQuVGV4dHVyZXNFbnRyeRI1CgltYXRlcmlhbHMY",
            "ywEgAygLMiEucHJvdG9fd29ybGQuV29ybGQuTWF0ZXJpYWxzRW50cnkSLwoG",
            "bWVzaGVzGMwBIAMoCzIeLnByb3RvX3dvcmxkLldvcmxkLk1lc2hlc0VudHJ5",
            "Ei8KBnNjZW5lcxjNASADKAsyHi5wcm90b193b3JsZC5Xb3JsZC5TY2VuZXNF",
            "bnRyeRpDCgxTaGFkZXJzRW50cnkSCwoDa2V5GAEgASgJEiIKBXZhbHVlGAIg",
            "ASgLMhMucHJvdG9fd29ybGQuU2hhZGVyOgI4ARpFCg1UZXh0dXJlc0VudHJ5",
            "EgsKA2tleRgBIAEoCRIjCgV2YWx1ZRgCIAEoCzIULnByb3RvX3dvcmxkLlRl",
            "eHR1cmU6AjgBGkcKDk1hdGVyaWFsc0VudHJ5EgsKA2tleRgBIAEoCRIkCgV2",
            "YWx1ZRgCIAEoCzIVLnByb3RvX3dvcmxkLk1hdGVyaWFsOgI4ARpACgtNZXNo",
            "ZXNFbnRyeRILCgNrZXkYASABKAkSIAoFdmFsdWUYAiABKAsyES5wcm90b193",
            "b3JsZC5NZXNoOgI4ARpBCgtTY2VuZXNFbnRyeRILCgNrZXkYASABKAkSIQoF",
            "dmFsdWUYAiABKAsyEi5wcm90b193b3JsZC5TY2VuZToCOAFCAkgDYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoWorld.TextureReflection.Descriptor, global::ProtoWorld.SceneReflection.Descriptor, global::ProtoWorld.ModelReflection.Descriptor, global::ProtoWorld.MaterialReflection.Descriptor, global::ProtoWorld.ShaderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoWorld.World), global::ProtoWorld.World.Parser, new[]{ "Version", "Name", "File", "Shaders", "Textures", "Materials", "Meshes", "Scenes" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class World : pb::IMessage<World> {
    private static readonly pb::MessageParser<World> _parser = new pb::MessageParser<World>(() => new World());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<World> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoWorld.WorldReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World(World other) : this() {
      version_ = other.version_;
      name_ = other.name_;
      file_ = other.file_;
      shaders_ = other.shaders_.Clone();
      textures_ = other.textures_.Clone();
      materials_ = other.materials_.Clone();
      meshes_ = other.meshes_.Clone();
      scenes_ = other.scenes_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public World Clone() {
      return new World(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 101;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 102;
    private string file_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shaders" field.</summary>
    public const int ShadersFieldNumber = 201;
    private static readonly pbc::MapField<string, global::ProtoWorld.Shader>.Codec _map_shaders_codec
        = new pbc::MapField<string, global::ProtoWorld.Shader>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::ProtoWorld.Shader.Parser), 1610);
    private readonly pbc::MapField<string, global::ProtoWorld.Shader> shaders_ = new pbc::MapField<string, global::ProtoWorld.Shader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ProtoWorld.Shader> Shaders {
      get { return shaders_; }
    }

    /// <summary>Field number for the "textures" field.</summary>
    public const int TexturesFieldNumber = 202;
    private static readonly pbc::MapField<string, global::ProtoWorld.Texture>.Codec _map_textures_codec
        = new pbc::MapField<string, global::ProtoWorld.Texture>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::ProtoWorld.Texture.Parser), 1618);
    private readonly pbc::MapField<string, global::ProtoWorld.Texture> textures_ = new pbc::MapField<string, global::ProtoWorld.Texture>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ProtoWorld.Texture> Textures {
      get { return textures_; }
    }

    /// <summary>Field number for the "materials" field.</summary>
    public const int MaterialsFieldNumber = 203;
    private static readonly pbc::MapField<string, global::ProtoWorld.Material>.Codec _map_materials_codec
        = new pbc::MapField<string, global::ProtoWorld.Material>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::ProtoWorld.Material.Parser), 1626);
    private readonly pbc::MapField<string, global::ProtoWorld.Material> materials_ = new pbc::MapField<string, global::ProtoWorld.Material>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ProtoWorld.Material> Materials {
      get { return materials_; }
    }

    /// <summary>Field number for the "meshes" field.</summary>
    public const int MeshesFieldNumber = 204;
    private static readonly pbc::MapField<string, global::ProtoWorld.Mesh>.Codec _map_meshes_codec
        = new pbc::MapField<string, global::ProtoWorld.Mesh>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::ProtoWorld.Mesh.Parser), 1634);
    private readonly pbc::MapField<string, global::ProtoWorld.Mesh> meshes_ = new pbc::MapField<string, global::ProtoWorld.Mesh>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ProtoWorld.Mesh> Meshes {
      get { return meshes_; }
    }

    /// <summary>Field number for the "scenes" field.</summary>
    public const int ScenesFieldNumber = 205;
    private static readonly pbc::MapField<string, global::ProtoWorld.Scene>.Codec _map_scenes_codec
        = new pbc::MapField<string, global::ProtoWorld.Scene>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::ProtoWorld.Scene.Parser), 1642);
    private readonly pbc::MapField<string, global::ProtoWorld.Scene> scenes_ = new pbc::MapField<string, global::ProtoWorld.Scene>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ProtoWorld.Scene> Scenes {
      get { return scenes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as World);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(World other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Name != other.Name) return false;
      if (File != other.File) return false;
      if (!Shaders.Equals(other.Shaders)) return false;
      if (!Textures.Equals(other.Textures)) return false;
      if (!Materials.Equals(other.Materials)) return false;
      if (!Meshes.Equals(other.Meshes)) return false;
      if (!Scenes.Equals(other.Scenes)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (File.Length != 0) hash ^= File.GetHashCode();
      hash ^= Shaders.GetHashCode();
      hash ^= Textures.GetHashCode();
      hash ^= Materials.GetHashCode();
      hash ^= Meshes.GetHashCode();
      hash ^= Scenes.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(170, 6);
        output.WriteString(Name);
      }
      if (File.Length != 0) {
        output.WriteRawTag(178, 6);
        output.WriteString(File);
      }
      shaders_.WriteTo(output, _map_shaders_codec);
      textures_.WriteTo(output, _map_textures_codec);
      materials_.WriteTo(output, _map_materials_codec);
      meshes_.WriteTo(output, _map_meshes_codec);
      scenes_.WriteTo(output, _map_scenes_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Name.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (File.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      size += shaders_.CalculateSize(_map_shaders_codec);
      size += textures_.CalculateSize(_map_textures_codec);
      size += materials_.CalculateSize(_map_materials_codec);
      size += meshes_.CalculateSize(_map_meshes_codec);
      size += scenes_.CalculateSize(_map_scenes_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(World other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      shaders_.Add(other.shaders_);
      textures_.Add(other.textures_);
      materials_.Add(other.materials_);
      meshes_.Add(other.meshes_);
      scenes_.Add(other.scenes_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 810: {
            Name = input.ReadString();
            break;
          }
          case 818: {
            File = input.ReadString();
            break;
          }
          case 1610: {
            shaders_.AddEntriesFrom(input, _map_shaders_codec);
            break;
          }
          case 1618: {
            textures_.AddEntriesFrom(input, _map_textures_codec);
            break;
          }
          case 1626: {
            materials_.AddEntriesFrom(input, _map_materials_codec);
            break;
          }
          case 1634: {
            meshes_.AddEntriesFrom(input, _map_meshes_codec);
            break;
          }
          case 1642: {
            scenes_.AddEntriesFrom(input, _map_scenes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
